!function(){"use strict";class e{constructor(e){let{data:t,cardSelector:s,handleCardClick:r,handleDeleteIcon:n,confirmPopup:i,handleLikeClick:o,handleUnlikeClick:a}=e;this._name=t.name,this._link=t.link,this._id=t._id,this._isLiked=t.isLiked,this._cardSelector=s,this._handleCardClick=r,this._handleDeleteIcon=n,this._confirmPopup=i,this._handleLikeClick=o,this._handleUnlikeClick=a}getId(){return this._id}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton=this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteIcon(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_handleLikeIcon(){this._isLiked?this._handleUnlikeClick(this):this._handleLikeClick(this)}setLike(e){this._isLiked=e,this._renderLikes()}isLiked(){return this._isLiked}_renderLikes(){this._isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getCardElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}generateDefaultCard(){return this._cardElement=this._getCardElement(),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._setEventListeners(),this._renderLikes(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._submitButton=t.querySelector(this._submitButtonSelector),this._inputList=Array.from(t.querySelectorAll(this._inputSelector))}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}resetButtonState(){this._toggleButtonState()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_checkFormValidity(){return this._inputList.every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handlesEscClose=this._handlesEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handlesEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handlesEscClose)}_handlesEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal")&&this.close()})),this._popupElement.querySelector(".modal__close-button").addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupElement.querySelector(".modal__save-button"),this._submitButtonText=this._submitButton.textContent,this._handleFormSubmit=t}_getInputValues(){return this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._popupForm.reset()}}document.querySelectorAll(".modal");const n=document.querySelector("#profile-edit-button"),i=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input"),document.querySelector("#profile-description-input"),document.querySelector(".profile__add-button")),o=(document.querySelector("#add-card-title-input"),document.querySelector("#add-card-url-input"),document.querySelector("#add-new-card-save-button"),document.querySelector("#preview-image-close-button"),document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),a=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._headers=s,this._baseUrl=t}_processResponse=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`);getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._processResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._processResponse)}updateUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.title,about:e.description})}).then(this._processResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._processResponse)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._processResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers,body:JSON.stringify({isLiked:!0})}).then(this._processResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._processResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._processResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9a60ea94-9d34-4f3e-83e3-c406b7fc4ac5","Content-Type":"application/json"}}),l=new class extends s{constructor(e){let{popupSelector:t}=e;super(t),this._confirmButton=this._popupElement.querySelector(".modal__save-button"),this._confirmButtonText=this._confirmButton.textContent}setAction(e){this._handleConfirm=e}setEventListeners(){super.setEventListeners(),this._confirmButton.addEventListener("click",(e=>{e.preventDefault(),this._handleConfirm()}))}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._confirmButton.textContent=e?t:this._confirmButtonText}}({popupSelector:".modal_delete-card"});l.setEventListeners();const d=(e,t)=>{L.open(e,t)},c=e=>{l.open(),l.setAction((()=>{l.renderLoading(!0),a.deleteCard(e.getId()).then((()=>{e.handleDeleteCard(),l.close()})).catch((e=>{console.error(e)})).finally((()=>{l.renderLoading(!1)}))}))},h=e=>{a.likeCard(e.getId()).then((t=>{e.setLike(t.isLiked)})).catch((e=>{console.error(e)}))},u=e=>{a.unlikeCard(e.getId()).then((t=>{e.setLike(t.isLiked)})).catch((e=>{console.error(e)}))};function _(t){const s=new e({data:t,cardSelector:"#card-template",handleCardClick:d,handleDeleteIcon:c,handleLikeClick:h,handleUnlikeClick:u,confirmPopup:l});m.addItem(s.generateDefaultCard())}const m=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:_},".cards__list"),p=new class{constructor(e,t,s){this._userNameElement=document.querySelector(e),this._userJobElement=document.querySelector(t),this._userAvatarElement=document.querySelector(s)}getUserInfo(){return{name:this._userNameElement.textContent,job:this._userJobElement.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._userNameElement.textContent=t,this._userJobElement.textContent=s}setAvatar(e){let{avatar:t}=e;this._userAvatarElement.src=t}}(".profile__title",".profile__description",".profile__avatar");Promise.all([a.getUserInfo(),a.getInitialCards()]).then((e=>{let[t,s]=e;p.setUserInfo(t),p.setAvatar(t),m.renderItems(s.reverse())})).catch((e=>{console.error(e)}));const E=new r("#profile-edit-avatar",(e=>{E.renderLoading(!0),a.updateAvatar(e).then((e=>{p.setAvatar(e)})).catch((e=>{console.error(e)})).finally((()=>{E.renderLoading(!1)}))}));E.setEventListeners(),document.querySelector(".profile__avatar-overlay").addEventListener("click",(()=>{b.disableButton(),E.open()}));const v=new r("#add-new-card-modal",(function(e){v.renderLoading(!0),a.addCard(e).then((e=>{_(e)})).catch((e=>{console.error(e)})).finally((()=>{v.renderLoading(!1)}))}));v.setEventListeners();const f=new r("#profile-edit-modal",(function(e){f.renderLoading(!0),a.updateUserInfo(e).then((e=>{p.setUserInfo(e),p.setAvatar(e)})).catch((e=>{console.error(e)})).finally((()=>{f.renderLoading(!1)}))}));f.setEventListeners();const L=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector("#preview-image"),this._popupCaption=this._popupElement.querySelector(".modal__preview-image-name")}open(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupCaption.textContent=e,super.open()}}(".modal_preview-image");L.setEventListeners(),n.addEventListener("click",(()=>{const e=p.getUserInfo();document.querySelector(".modal__input_type_username").value=e.name,document.querySelector(".modal__input_type_userjob").value=e.job,C.disableButton(),f.open()})),i.addEventListener("click",(()=>{k.resetButtonState(),v.open()}));const C=new t(o,document.forms["profile-edit-form"]);C.enableValidation();const k=new t(o,document.forms["add-card-form"]);k.enableValidation();const b=new t(o,document.forms["profile-edit-avatar"]);b.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,