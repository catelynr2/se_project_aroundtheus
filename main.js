!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton=this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_handleLikeIcon(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getCardElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}generateDefaultCard(){return this._cardElement=this._getCardElement(),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._submitButton=t.querySelector(this._submitButtonSelector),this._inputList=Array.from(t.querySelectorAll(this._inputSelector))}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}resetButtonState(){this._toggleButtonState()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_checkFormValidity(){return this._inputList.every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handlesEscClose=this._handlesEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handlesEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handlesEscClose)}_handlesEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal")&&this.close()})),this._popupElement.querySelector(".modal__close-button").addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){return this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){super.close(),this._popupForm.reset()}}document.querySelectorAll(".modal");const n=document.querySelector("#profile-edit-button"),o=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input"),document.querySelector("#profile-description-input"),document.querySelector(".profile__add-button")),i=(document.querySelector("#add-card-title-input"),document.querySelector("#add-card-url-input"),document.querySelector("#add-new-card-save-button"),document.querySelector("#preview-image-close-button"),document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild,{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),a=(e,t)=>{h.open(e,t)};function l(t){const s=new e(t,"#card-template",a);c.addItem(s.generateDefaultCard())}const c=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:l},".cards__list");c.renderItems([{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}]);const u=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._headers=s,this._baseUrl=t}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:{"Content-Type":this._contentType,_id:this._token}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{e.ok?e.json():Promise.reject(`Error: ${e.status}`)})).catch((e=>{console.error(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9a60ea94-9d34-4f3e-83e3-c406b7fc4ac5","Content-Type":"application/json"}});console.log(u),u.getUserInfo().then((e=>{console.log(e)})),u.getInitialCards().then((e=>{console.log(e)})).catch((e=>{console.error(e)}));const d=new r("#add-new-card-modal",(function(e){l(e)}));d.setEventListeners();const _=new class{constructor(e,t){this._userNameElement=document.querySelector(e),this._userJobElement=document.querySelector(t)}getUserInfo(){return{name:this._userNameElement.textContent,job:this._userJobElement.textContent}}setUserInfo(e){this._userNameElement.textContent=e.title,this._userJobElement.textContent=e.description}}(".profile__title",".profile__description"),m=new r("#profile-edit-modal",(function(e){_.setUserInfo(e)}));m.setEventListeners();const h=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector("#preview-image"),this._popupCaption=this._popupElement.querySelector(".modal__preview-image-name")}open(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupCaption.textContent=e,super.open()}}(".modal_preview-image");h.setEventListeners(),n.addEventListener("click",(()=>{const e=_.getUserInfo();document.querySelector(".modal__input_type_username").value=e.name,document.querySelector(".modal__input_type_userjob").value=e.job,p.disableButton(),m.open()})),o.addEventListener("click",(()=>{E.resetButtonState(),d.open()}));const p=new t(i,document.forms["profile-edit-form"]);p.enableValidation();const E=new t(i,document.forms["add-card-form"]);E.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,